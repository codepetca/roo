{
  "name": "roo-autograding",
  "private": true,
  "version": "1.0.0",
  "description": "AI-powered auto-grading system for educational assignments",
  "workspaces": [
    "frontend",
    "functions"
  ],
  "scripts": {
    "local": "npm run emulators:kill && cross-env NODE_ENV=development ENVIRONMENT=development concurrently \"npm:emulators:start\" \"npm:wait-for-emulators\" \"npm:frontend:local\"",
    "staging": "cross-env NODE_ENV=development ENVIRONMENT=staging firebase use staging && concurrently \"npm:frontend:staging\"",
    "production": "echo '⚠️  Production mode - read-only access' && cross-env NODE_ENV=development ENVIRONMENT=production firebase use production && concurrently \"npm:frontend:production\"",
    "dev": "npm run local",
    "emulators:start": "cross-env FIRESTORE_EMULATOR_HOST=localhost:8080 FIREBASE_AUTH_EMULATOR_HOST=localhost:9099 FUNCTIONS_EMULATOR=true firebase emulators:start --import=./emulator-data --export-on-exit",
    "emulators:kill": "pkill -f 'firebase emulators' || true",
    "emulators:exec": "firebase emulators:exec --import=./emulator-data",
    "emulators:export": "firebase emulators:export ./emulator-data",
    "emulators:seed": "node scripts/seed-emulator-data.mjs",
    "wait-for-emulators": "wait-on tcp:8080 tcp:9099 tcp:5001 --timeout 30000",
    "frontend:local": "cd frontend && cross-env PUBLIC_ENVIRONMENT=development npm run dev",
    "frontend:staging": "cd frontend && cross-env PUBLIC_ENVIRONMENT=staging npm run dev",
    "frontend:production": "cd frontend && cross-env PUBLIC_ENVIRONMENT=production npm run dev",
    "build": "npm run build:frontend",
    "build:frontend": "cd frontend && npm run build",
    "test": "npm run test:frontend && npm run test:backend",
    "test:frontend": "cd frontend && npm test",
    "test:backend": "cd functions && npm test",
    "test:unit": "npm run test:frontend && npm run test:backend",
    "test:integration": "cd functions && npm run test:integration",
    "test:all": "npm run test:frontend && cd functions && npm run test:all",
    "test:manual": "./testing/manual/test-all-endpoints.sh",
    "lint": "npm run lint:frontend && npm run lint:backend",
    "lint:frontend": "cd frontend && npm run lint",
    "lint:backend": "cd functions && npm run lint",
    "format": "npm run format:frontend && npm run format:backend",
    "format:frontend": "cd frontend && npm run format",
    "format:backend": "cd functions && npm run format",
    "check": "npm run type-check",
    "type-check": "npm run type-check:frontend && npm run type-check:backend",
    "type-check:frontend": "cd frontend && npm run check",
    "type-check:backend": "cd functions && npm run type-check",
    "quality:check": "npm run lint && npm run type-check",
    "quality:complexity": "npx complexity-report functions/src/ && npx complexity-report frontend/src/",
    "quality:report": "npm run quality:check && npm run quality:complexity",
    "health": "./scripts/health-check.sh",
    "health:quick": "./scripts/quick-check.sh",
    "check:quick": "./scripts/quick-check.sh",
    "verify:deployment": "./scripts/verify-deployment.sh",
    "deploy": "npm run build:frontend && firebase deploy",
    "deploy:staging": "firebase use staging && npm run build:frontend && firebase deploy",
    "deploy:production": "firebase use production && npm run build:frontend && firebase deploy",
    "claude:setup": "npm run local",
    "claude:check": "npm run quality:check && npm run test",
    "claude:test-watch": "cd frontend && npm test -- --watch",
    "claude:commit": "npm run claude:check && git add -A",
    "claude:dev": "npm run local",
    "claude:build": "npm run build",
    "claude:deploy": "npm run deploy"
  },
  "dependencies": {
    "googleapis": "^154.0.0"
  },
  "devDependencies": {
    "undici-types": "^7.12.0",
    "concurrently": "^8.2.2",
    "complexity-report": "^2.0.0-alpha",
    "typescript": "^5.0.0",
    "cross-env": "^7.0.3",
    "wait-on": "^8.0.1"
  }
}